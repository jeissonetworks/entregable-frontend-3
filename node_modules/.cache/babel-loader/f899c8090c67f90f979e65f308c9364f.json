{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend3\\\\entregable-frontend-3\\\\src\\\\components\\\\Item.js\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React from 'react';\nimport Item from './Item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Listado(_ref) {\n  let {\n    countBuy,\n    dataItems\n  } = _ref;\n  console.log(dataItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: dataItems.map(item => /*#__PURE__*/_jsxDEV(Item, {\n      buy: countBuy,\n      title: item.producto.nombre,\n      description: item.producto.descripcion,\n      stock: item.stock\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 35\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n_c = Listado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listado\");","map":{"version":3,"names":["React","Item","Listado","countBuy","dataItems","console","log","map","item","producto","nombre","descripcion","stock","id"],"sources":["D:/frontend3/entregable-frontend-3/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nimport React from 'react'\r\nimport Item from './Item'\r\n\r\nexport default function Listado({countBuy, dataItems}) {\r\n  console.log(dataItems);\r\n    return (\r\n      <div className='container'>\r\n        {\r\n          dataItems.map((item) => <Item buy={countBuy} key={item.id} title={item.producto.nombre} description={item.producto.descripcion} stock={item.stock}></Item>)\r\n        }\r\n      </div>\r\n    )\r\n}\r\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,OAAT,OAAwC;EAAA,IAAvB;IAACC,QAAD;IAAWC;EAAX,CAAuB;EACrDC,OAAO,CAACC,GAAR,CAAYF,SAAZ;EACE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,UAEIA,SAAS,CAACG,GAAV,CAAeC,IAAD,iBAAU,QAAC,IAAD;MAAM,GAAG,EAAEL,QAAX;MAAmC,KAAK,EAAEK,IAAI,CAACC,QAAL,CAAcC,MAAxD;MAAgE,WAAW,EAAEF,IAAI,CAACC,QAAL,CAAcE,WAA3F;MAAwG,KAAK,EAAEH,IAAI,CAACI;IAApH,GAA0BJ,IAAI,CAACK,EAA/B;MAAA;MAAA;MAAA;IAAA,QAAxB;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAOH;KATuBX,O"},"metadata":{},"sourceType":"module"}