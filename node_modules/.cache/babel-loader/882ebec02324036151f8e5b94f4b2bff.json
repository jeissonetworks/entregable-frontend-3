{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend3\\\\entregable-frontend-3\\\\src\\\\components\\\\Cabecera.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // El componente Cabera no tiene componentes hijos.\n// ESTADO: Cabecera no tiene estado.\n// MÉTODOS: Cabecera no tiene métodos.\n// PROPS: Cabecera recibe de su padre la cantidad que va a mostrar dentro del span correpondiente\n// Maqueta de Cabecera:\n//    h1\n//    p > span     (el span mostrará la cantidad recibida por props)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cabecera = _ref => {\n  _s();\n\n  let {\n    stock\n  } = _ref;\n  const [counter, setCounter] = useState(0);\n\n  const handleAdd = () => {\n    if (counter < stock) {\n      setCounter(counter + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carrito de Compras\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cantidad de productos \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", counter, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cabecera, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c = Cabecera;\nexport default Cabecera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cabecera\");","map":{"version":3,"names":["React","Cabecera","stock","counter","setCounter","useState","handleAdd"],"sources":["D:/frontend3/entregable-frontend-3/src/components/Cabecera.js"],"sourcesContent":["import React from 'react'\r\n\r\n// El componente Cabera no tiene componentes hijos.\r\n// ESTADO: Cabecera no tiene estado.\r\n// MÉTODOS: Cabecera no tiene métodos.\r\n// PROPS: Cabecera recibe de su padre la cantidad que va a mostrar dentro del span correpondiente\r\n// Maqueta de Cabecera:\r\n//    h1\r\n//    p > span     (el span mostrará la cantidad recibida por props)\r\n\r\nconst Cabecera = ({stock}) => {\r\n  const [counter, setCounter] = useState(0)\r\n\r\n  const handleAdd = () => {\r\n    if(counter < stock){\r\n      setCounter(counter+1)\r\n    }\r\n  }\r\n   return (\r\n    <header>\r\n        <h1>Carrito de Compras</h1>\r\n        <p>Cantidad de productos <span> {counter} </span></p>\r\n    </header>\r\n  )\r\n}\r\nexport default Cabecera;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAC5B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,CAAD,CAAtC;;EAEA,MAAMC,SAAS,GAAG,MAAM;IACtB,IAAGH,OAAO,GAAGD,KAAb,EAAmB;MACjBE,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;IACD;EACF,CAJD;;EAKC,oBACC;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,kDAAyB;QAAA,gBAAQA,OAAR;MAAA;QAAA;QAAA;QAAA;MAAA,QAAzB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAMF,CAdD;;GAAMF,Q;;KAAAA,Q;AAeN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}